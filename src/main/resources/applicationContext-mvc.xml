<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">

	
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven conversion-service="conversionService">
		<argument-resolvers>
			<beans:bean class="org.springframework.data.web.PageableArgumentResolver"/>
		</argument-resolvers>
	</annotation-driven>

	<default-servlet-handler/>
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/history/**" location="/history/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- beans:bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		 <beans:property name="webBindingInitializer">
		 	<beans:bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
			  	<beans:property name="propertyEditorRegistrars">
			  		<beans:array>
			  			<beans:bean class="org.springframework.data.repository.support.DomainClassPropertyEditorRegistrar" />
			  		</beans:array>
			  	</beans:property>
			</beans:bean>
		 </beans:property>
	</beans:bean -->
	
	<!-- Only needed because we install custom converters to support the examples in the com.jim.sdh.web.mvc.convert package -->
	<beans:bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<beans:property name="converters">
			<beans:set>
        	</beans:set>
        </beans:property>
		<beans:property name="formatters">
			<beans:set>
			</beans:set>
		</beans:property>
	</beans:bean>
	
	<beans:bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
	    <beans:property name="targetObject" ref="conversionService"/>
	    <beans:property name="targetMethod" value="addConverter"/>
	    <beans:property name="arguments">
	    <beans:list>
	        <beans:bean class="org.springframework.data.repository.support.DomainClassConverter">
	        	<beans:constructor-arg ref="conversionService"/>
	        </beans:bean>
	    </beans:list>
	  </beans:property>
	</beans:bean>
	
	<interceptors>
		<interceptor>
			<mapping path="/**"/>
			<beans:bean class="me.tucao.web.mvc.interceptors.SignInTsInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/**"/>
			<beans:bean class="me.tucao.web.mvc.interceptors.LastVisitedUrlInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/**"/>
			<beans:bean class="me.tucao.web.mvc.interceptors.GeoCityInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/**"/>
			<beans:bean class="me.tucao.web.mvc.interceptors.PreferenceInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/**"/>
			<beans:bean class="me.tucao.web.mvc.interceptors.ByInterceptor" />
		</interceptor>
	</interceptors>

	<!-- Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload package -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- Imports user-defined @Controller beans that process client requests -->
	<beans:import resource="applicationContext-controller.xml" />
	
</beans:beans>